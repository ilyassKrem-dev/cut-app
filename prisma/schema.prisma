
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  emailVerified Boolean @default(false)
  name String
  image String?
  password String
  phoneNumber String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isBarber Boolean @default(false)
  barber Barber?
  participants Participant[]
  comments Comment[]
}

model Barber {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId @unique
  user User @relation(fields: [userId],references: [id])
  address String
  city String
  latitude  String
  longitude String
  defaultPrice Float
  rating Float @default(0.0)
  phoneNumber String?
  comments Comment[]
  images String[]
  haircuts HaircutPrice[]
}

model HaircutPrice {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name        String   
  price       Float
  description String?
  image String?   
  barber Barber @relation(fields: [barberId], references: [id])
  barberId String @db.ObjectId
}


model Message {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  senderId   String @db.ObjectId
  receiverId String  @db.ObjectId
  content    String 
  sentAt     DateTime @default(now())
  convoId String @db.ObjectId @unique
  convo Convo @relation(fields: [convoId],references: [id])

}

model Convo {
  id  String   @id @default(auto()) @map("_id") @db.ObjectId
  participants Participant[]
  messages Message[]
  createdAt DateTime @default(now())
}
model Participant {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  user       User       @relation(fields: [userId], references: [id])
  convo      Convo      @relation(fields: [convoId], references: [id])
  userId     String     @db.ObjectId
  convoId    String     @db.ObjectId
}
model Comment {
  id String     @id @default(auto()) @map("_id") @db.ObjectId
  user User  @relation(fields: [userId],references: [id])
  userId String @db.ObjectId
  barberId String @db.ObjectId
  barber Barber @relation(fields: [barberId],references: [id])
}